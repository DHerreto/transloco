"use strict";(self.webpackChunktransloco_docs=self.webpackChunktransloco_docs||[]).push([[5595],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),p=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=p(e.components);return o.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(t),m=r,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return t?o.createElement(f,l(l({ref:n},c),{},{components:t})):o.createElement(f,l({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,l=new Array(a);l[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<a;p++)l[p]=t[p];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6279:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return u}});var o=t(7462),r=t(3366),a=(t(7294),t(3905)),l=["components"],i={title:"Inline Loaders",description:"Inline Loaders | Transloco Angular i18n"},s=void 0,p={unversionedId:"lazy-load/inline-loaders",id:"lazy-load/inline-loaders",title:"Inline Loaders",description:"Inline Loaders | Transloco Angular i18n",source:"@site/docs/lazy-load/inline-loaders.mdx",sourceDirName:"lazy-load",slug:"/lazy-load/inline-loaders",permalink:"/transloco/docs/lazy-load/inline-loaders",draft:!1,editUrl:"https://github.com/ngneat/transloco/edit/master/docs/docs/lazy-load/inline-loaders.mdx",tags:[],version:"current",frontMatter:{title:"Inline Loaders",description:"Inline Loaders | Transloco Angular i18n"},sidebar:"docs",previous:{title:"Scope Configuration",permalink:"/transloco/docs/lazy-load/scope-configuration"},next:{title:"Unit Testing",permalink:"/transloco/docs/unit-testing"}},c={},u=[],d={toc:u};function m(e){var n=e.components,t=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"When working on a feature module or a library (which is common in a monorepo environment), we may want to have the translation files inside the module folder and ship them together with it.\nTo enable this feature, Transloco supports ",(0,a.kt)("inlineCode",{parentName:"p"},"scope")," with inline loaders. We can pass the scope name and an inline loader that leverages Webpack import function to lazy load the local translation files."),(0,a.kt)("p",null,"Let's say we have the following Angular CLI project:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"\ud83d\udce6projects\n \u2517 \ud83d\udcc2feature-module\n \u2503 \u2523 \ud83d\udcc2src\n \u2503 \u2503 \u2523 \ud83d\udcc2lib\n \u2503 \u2503 \u2503 \u2523 \ud83d\udcc2i18n\n \u2503 \u2503 \u2503 \u2503 \u2523 \ud83d\udcdcen.json\n \u2503 \u2503 \u2503 \u2503 \u2517 \ud83d\udcdces.json\n \u2503 \u2503 \u2503 \u2523 \ud83d\udcdcfeature-module.component.ts\n \u2503 \u2503 \u2503 \u2523 \ud83d\udcdcfeature-module.module.ts\n \u2503 \u2503 \u2503 \u2517 \ud83d\udcdcfeature-module.service.ts\n \u2503 \u2503 \u2523 \ud83d\udcdcpublic-api.ts\n\ud83d\udce6src\n \u2523 \ud83d\udcc2app\n \u2503 \u2523 \ud83d\udcdcapp-routing.module.ts\n \u2503 \u2523 \ud83d\udcdcapp.component.css\n \u2503 \u2523 \ud83d\udcdcapp.component.html\n \u2503 \u2523 \ud83d\udcdcapp.component.ts\n \u2503 \u2523 \ud83d\udcdcapp.module.ts\n \u2503 \u2517 \ud83d\udcdctransloco.loader.ts\n \u2523 \ud83d\udcc2assets\n \u2503 \u2523 \ud83d\udcc2i18n\n \u2503 \u2503 \u2523 \ud83d\udcdcen.json\n \u2503 \u2503 \u2517 \ud83d\udcdces.json\n")),(0,a.kt)("p",null,"Inside the ",(0,a.kt)("inlineCode",{parentName:"p"},"feature")," module, we can define the ",(0,a.kt)("inlineCode",{parentName:"p"},"TRANSLOCO_SCOPE")," provider and pass an inline loader:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'{13} title="feature.module.ts"',"{13}":!0,title:'"feature.module.ts"'},"export const loader = ['en', 'es'].reduce((acc, lang) => {\n  acc[lang] = () => import(`../i18n/${lang}.json`);\n  return acc;\n}, {});\n\n@NgModule({\n  imports: [TranslocoModule],\n  providers: [\n    {\n      provide: TRANSLOCO_SCOPE,\n      useValue: {\n        scope: 'scopeName',\n        loader\n      }\n    }\n  ],\n  declarations: [YourComponent],\n  exports: [YourComponent]\n})\nexport class FeatureModule {}\n")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Note that when using an inline loader, the ",(0,a.kt)("inlineCode",{parentName:"p"},"scope")," key is used as the ",(0,a.kt)("inlineCode",{parentName:"p"},"alias"),".")),(0,a.kt)("p",null,"Now we can translate our content using the ",(0,a.kt)("inlineCode",{parentName:"p"},"scope")," we define:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'{5} title="my-comp.component.ts"',"{5}":!0,title:'"my-comp.component.ts"'},"@Component({\n  selector: 'your-comp',\n  template: `\n    <ng-container *transloco=\"let t\">\n      <p>{{ t('scopeName.title') }}</p>\n    </ng-container>\n  `\n})\nexport class YourComponent {}\n")),(0,a.kt)("p",null,"And lazy-loaded both the ",(0,a.kt)("inlineCode",{parentName:"p"},"feature")," module and its translation files in our application:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="app.module.ts"',title:'"app.module.ts"'},"@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    TranslocoModule,\n    RouterModule.forRoot([\n    {\n       path: 'route-name',\n       loadChildren: () =>\n         import('path/to/feature/module').then( m => m.FeatureModule)\n      }\n    ])\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Note that following the Angular DI rules, it can be done either in a feature module that we lazy-loaded or at the component providers level.")),(0,a.kt)("p",null,"You can find a complete working example that uses ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/NetanelBasal/transloco-with-nx-libs"},"nx")," here."))}m.isMDXComponent=!0}}]);