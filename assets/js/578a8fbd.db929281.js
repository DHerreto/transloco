"use strict";(self.webpackChunktransloco_docs=self.webpackChunktransloco_docs||[]).push([[379],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return u}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=p(n),u=l,k=m["".concat(s,".").concat(u)]||m[u]||d[u]||i;return n?a.createElement(k,r(r({ref:t},c),{},{components:n})):a.createElement(k,r({ref:t},c))}));function u(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8845:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return m}});var a=n(7462),l=n(3366),i=(n(7294),n(3905)),r=["components"],o={title:"ngx-translate",description:"ngx-translate Migration | Transloco Angular i18n"},s=void 0,p={unversionedId:"migration/ngx",id:"migration/ngx",isDocsHomePage:!1,title:"ngx-translate",description:"ngx-translate Migration | Transloco Angular i18n",source:"@site/docs/migration/ngx.mdx",sourceDirName:"migration",slug:"/migration/ngx",permalink:"/transloco/docs/migration/ngx",editUrl:"https://github.com/ngneat/transloco/edit/master/docs/docs/migration/ngx.mdx",tags:[],version:"current",frontMatter:{title:"ngx-translate",description:"ngx-translate Migration | Transloco Angular i18n"},sidebar:"docs",previous:{title:"Component",permalink:"/transloco/docs/schematics/component"},next:{title:"Angular",permalink:"/transloco/docs/migration/angular"}},c=[{value:"Command",id:"command",children:[]},{value:"What will be done?",id:"what-will-be-done",children:[{value:"Pipes",id:"pipes",children:[]},{value:"Directives",id:"directives",children:[]},{value:"Imports",id:"imports",children:[]},{value:"Constructor Injections",id:"constructor-injections",children:[]},{value:"Service Usages",id:"service-usages",children:[]},{value:"Modules",id:"modules",children:[]},{value:"Specs",id:"specs",children:[]},{value:"Issues",id:"issues",children:[]}]}],d={toc:c};function m(e){var t=e.components,n=(0,l.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"some manual changes might still be needed after the script ran."))),(0,i.kt)("h3",{id:"command"},"Command"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ng g @ngneat/transloco:migrate")),(0,i.kt)("h2",{id:"what-will-be-done"},"What will be done?"),(0,i.kt)("p",null,"The script will iterate recursively over all your ",(0,i.kt)("inlineCode",{parentName:"p"},"HTML")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"TS")," files and will execute the replacements described below:"),(0,i.kt)("h3",{id:"pipes"},"Pipes"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"translate")," pipes will be replaced with the ",(0,i.kt)("inlineCode",{parentName:"p"},"transloco")," pipe."),(0,i.kt)("h5",{id:"examples"},"Examples:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},'{{ "hello.world" | translate }}')," will be replaced with",(0,i.kt)("inlineCode",{parentName:"li"},'{{ "hello.world" | transloco }}')),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},'{{ "hello.world" | translate | anotherPipe | oneMore ... }}')," will be replaced with",(0,i.kt)("inlineCode",{parentName:"li"},'{{ "hello.world" | transloco | anotherPipe | oneMore ... }}')),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"{{ \"hello\" | translate:{name: 'Jhon'} }}")," will be replaced with",(0,i.kt)("inlineCode",{parentName:"li"},"{{ \"hello\" | transloco:{name: 'Jhon'} }}")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"{{ \"hello\" | translate:{name: 'Jhon'} | anotherPipe }}")," will be replaced with",(0,i.kt)("inlineCode",{parentName:"li"},"{{ \"hello\" | transloco:{name: 'Jhon'} | anotherPipe }}")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"<component [header]=\"'hello.world' | translate\"...")," will be replaced with ",(0,i.kt)("inlineCode",{parentName:"li"},"<component [header]=\"'hello.world' | transloco\"...")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"<component [header]=\"'hello.world' | translate | anotherPipe\"...")," will be replaced with ",(0,i.kt)("inlineCode",{parentName:"li"},"<component [header]=\"'hello.world' | transloco | anotherPipe\"...")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"<component [header]=\"'hello' | translate:params | anotherPipe\"...")," will be replaced with ",(0,i.kt)("inlineCode",{parentName:"li"},"<component [header]=\"'hello' | transloco:params | anotherPipe\"..."))),(0,i.kt)("h3",{id:"directives"},"Directives"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"translate")," & ",(0,i.kt)("inlineCode",{parentName:"p"},"translateParams")," directives will be replaced with the matching ",(0,i.kt)("inlineCode",{parentName:"p"},"transloco")," directives."),(0,i.kt)("h5",{id:"examples-1"},"Examples:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"<div [translate]=\"'HELLO'\" [translateParams]=\"{value: 'world'}\"></div>")," will be replaced with",(0,i.kt)("inlineCode",{parentName:"li"},"<div [transloco]=\"'HELLO'\" [translocoParams]=\"{value: 'world'}\"></div>"))),(0,i.kt)("h3",{id:"imports"},"Imports"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"TranslateService")," imports will be replaced with ",(0,i.kt)("inlineCode",{parentName:"p"},"TranslocoService"),"."),(0,i.kt)("h5",{id:"examples-2"},"Examples:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"import {TranslateService} from '@ngx-translate/core';")," will be replaced with ",(0,i.kt)("inlineCode",{parentName:"li"},"import { TranslocoService } from '@ngneat/transloco';")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"import {TranslateModule, TranslateLoader} from '@ngx-translate/core';")," will be replaced with\n",(0,i.kt)("inlineCode",{parentName:"li"},"import {TranslateLoader} from '@ngx-translate/core';"),(0,i.kt)("inlineCode",{parentName:"li"},"import { TranslocoService } from '@ngneat/transloco';"))),(0,i.kt)("h3",{id:"constructor-injections"},"Constructor Injections"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"TranslateService")," injections will be replaced with ",(0,i.kt)("inlineCode",{parentName:"p"},"TranslocoService"),"."),(0,i.kt)("h5",{id:"examples-3"},"Examples:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"constructor(private translate: TranslateService) {")," will be replaced with ",(0,i.kt)("inlineCode",{parentName:"li"},"constructor(private translate: TranslocoService) {"))),(0,i.kt)("h3",{id:"service-usages"},"Service Usages"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"translateService.currentLang")," will be replaced with ",(0,i.kt)("inlineCode",{parentName:"li"},"translateService.getActiveLang()"),"."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"translateService.onLangChange")," will be replaced with ",(0,i.kt)("inlineCode",{parentName:"li"},"translateService.langChanges$"),"."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"translateService.use(...)")," calls will be replaced with ",(0,i.kt)("inlineCode",{parentName:"li"},"translateService.setActiveLang(...)"),"."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"translateService.instant(...)")," calls will be replaced with ",(0,i.kt)("inlineCode",{parentName:"li"},"translateService.translate(...)"),"."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"translateService.get(...)")," calls will be replaced with ",(0,i.kt)("inlineCode",{parentName:"li"},"translateService.selectTranslate(...)")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"take(1)")," needs to be manually added ",(0,i.kt)("inlineCode",{parentName:"li"},"translateService.selectTranslate(...).pipe(take(1))")," in order to prevent listening to language changes."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"translateService.stream(...)")," calls will be replaced with ",(0,i.kt)("inlineCode",{parentName:"li"},"translateService.selectTranslate(...)"),"."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"translateService.set(...)")," calls will be replaced with ",(0,i.kt)("inlineCode",{parentName:"li"},"translateService.setTranslation(...)"),".")),(0,i.kt)("h5",{id:"examples-4"},"Examples:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"const translation = this.translateService.instant('hello')")," will be replaced with ",(0,i.kt)("inlineCode",{parentName:"li"},"const translation = this.translateService.translate('hello')"))),(0,i.kt)("h5",{id:"manual-replacements"},"Manual Replacements"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"getBrowserLang()")," - In Transloco it's a pure function that needs to be imported."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"getBrowserCultureLang()")," - In Transloco it's a pure function that needs to be imported."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"currentLoader")," - No equivalent in Transloco."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"addLangs(...)")," - No equivalent in Transloco."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"getLangs(...)")," - No equivalent in Transloco."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"reloadLang(...)")," - No equivalent in Transloco."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"resetLang(...)")," - No equivalent in Transloco.")),(0,i.kt)("h3",{id:"modules"},"Modules"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"TranslateModule")," & ",(0,i.kt)("inlineCode",{parentName:"p"},"TranslateModule.forChild(...)")," & ",(0,i.kt)("inlineCode",{parentName:"p"},"TranslateModule.forRoot(...)")," will be replaced with ",(0,i.kt)("inlineCode",{parentName:"p"},"TranslocoModule")),(0,i.kt)("h5",{id:"examples-5"},"Examples:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"TranslateModule.forChild({ loader: { provide: TranslateLoader, useFactory: HttpLoaderFactory, deps: [HttpClient] } })")," will be replaced with ",(0,i.kt)("inlineCode",{parentName:"li"},"TranslocoModule"))),(0,i.kt)("h3",{id:"specs"},"Specs"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"#imports"},"Imports"),", ",(0,i.kt)("a",{parentName:"p",href:"#modules"},"Modules")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"TranslateService")," will be replaced with ",(0,i.kt)("inlineCode",{parentName:"p"},"TranslocoService")),(0,i.kt)("h3",{id:"issues"},"Issues"),(0,i.kt)("p",null,"If you encounter any issues with the migration script please open a github issue so we can resolve them and make a better experience for all."))}m.isMDXComponent=!0}}]);